services:
  expression.builder:
    class: Vain\Expression\Builder\ExpressionBuilder
    arguments: ['@expression.factory']
  expression.factory:
    class: Vain\Expression\Factory\ExpressionFactory
    arguments: ['@expression.boolean.result.factory']
  expression.boolean.result.factory:
    class: Vain\Expression\Boolean\Result\Factory\BooleanResultFactory
  expression.parser:
    class: Vain\Expression\Parser\Composite\Parser
    arguments: ['@expression.parser.record.queue', '@expression.stack', '@expression.parser.algorithm']
  expression.parser.algorithm.dijkstra:
    class: Vain\Expression\Parser\Algorithm\Dijkstra\DijkstraParserAlgorithm
    arguments: ['@expression.parser.algorithm.dijkstra.bracket', '@expression.parser.algorithm.dijkstra.function', '@expression.parser.algorithm.dijkstra.operator', '@expression.parser.algorithm.dijkstra.post', '@expression.parser.algorithm.dijkstra.finish', '@expression.parser.rpl.queue', '@expression.parser.operator.stack']
  expression.parser.algorithm.dijkstra.bracket:
    class: Vain\Expression\Parser\Algorithm\Dijkstra\Engine\Bracket\DijkstraBracketEngine
  expression.parser.algorithm.dijkstra.finish:
    class: Vain\Expression\Parser\Algorithm\Dijkstra\Engine\Finish\DijkstraFinishEngine
  expression.parser.algorithm.dijkstra.function:
    class: Vain\Expression\Parser\Algorithm\Dijkstra\Engine\FunctionX\DijkstraFunctionEngine
  expression.parser.algorithm.dijkstra.operator:
    class: Vain\Expression\Parser\Algorithm\Dijkstra\Engine\Operator\DijkstraOperatorEngine
  expression.parser.algorithm.dijkstra.post:
    class: Vain\Expression\Parser\Algorithm\Dijkstra\Engine\Post\DijkstraPostBracketEngine
  expression.parser.algorithm: '@expression.parser.algorithm.dijkstra'
  expression.parser.record.queue:
    class: Vain\Expression\Parser\Record\Queue\ParserRecordQueue
  expression.parser.rpl.queue:
    class: Vain\Expression\Parser\Record\Queue\ParserRecordQueue
  expression.parser.operator.stack:
    class: Vain\Expression\Parser\Record\Operator\Stack\ParserOperatorRecordStack
  expression.parser.logger.decorator:
    class: Vain\Expression\Parser\Algorithm\Decorator\Logger\ParserAlgorithmLoggerDecorator
    arguments: ['@expression.parser', '@app.logger']
  expression.lexer:
    class: Vain\Expression\Lexer\Composite\Lexer
    arguments: [['@lexer.module.operator', '@lexer.module.string', '@lexer.module.bracket', '@lexer.module.punctuation', '@lexer.module.number', '@lexer.module.unknown']]
  expression.stack:
    class: Vain\Expression\Stack\ExpressionStack
  lexer.module.unknown:
    class: Vain\Expression\Lexer\Module\Unknown\UnknownLexerModule
    arguments: [0]
  lexer.module.string:
    class: Vain\Expression\Lexer\Module\String\StringLexerModule
    arguments: [100]
  lexer.module.operator:
    class: Vain\Expression\Lexer\Module\Operator\OperatorLexerModule
    arguments: [200]
  lexer.module.bracket:
    class: Vain\Expression\Lexer\Module\Bracket\BracketLexerModule
    arguments: [300]
  lexer.module.punctuation:
    class: Vain\Expression\Lexer\Module\Punctuation\PunctuationLexerModule
    arguments: [400]
  lexer.module.number:
    class: Vain\Expression\Lexer\Module\Number\NumberLexerModule
    arguments: [500]
  parser.terminal.module:
    class: Vain\Expression\Terminal\Module\TerminalParserModule
    arguments: ['@parser.terminal.module.translate', '@parser.terminal.module.process']
    tags:
      - {name: expression.parser.module}
  parser.terminal.module.translate:
    class: Vain\Expression\Terminal\Module\TerminalTranslateModule
  parser.terminal.module.process:
    class: Vain\Expression\Terminal\Module\TerminalProcessModule
  parser.math.module:
    class: Vain\Expression\Math\Module\MathParserModule
    arguments: ['@parser.math.module.translate', '@parser.math.module.process']
    tags:
      - {name: expression.parser.module}
  parser.math.module.translate:
    class: Vain\Expression\Math\Module\MathTranslateModule
    arguments: [{'+': [110, false], '-': [110, false], '*': [120, false], '/': [120, false], '**': [130, true], '^': [130, true], '%': [140, false]}]
  parser.math.module.process:
    class: Vain\Expression\Math\Module\MathProcessModule
  parser.boolean.module:
    class: Vain\Expression\Boolean\Module\BooleanParserModule
    arguments: ['@parser.boolean.module.translate', '@parser.boolean.module.process']
    tags:
      - {name: expression.parser.module}
  parser.boolean.module.translate:
    class: Vain\Expression\Boolean\Module\BooleanTranslateModule
    arguments: [{'||': [210, false], '&&': [220, false], '~': [230, true], '!': [230, false]}]
  parser.boolean.module.process:
    class: Vain\Expression\Boolean\Module\BooleanProcessModule
    arguments: ['@expression.boolean.result.factory']
<?php
/**
 * Created by PhpStorm.
 * User: allflame
 * Date: 4/7/16
 * Time: 10:57 AM
 */

namespace Vain\Expression\Descriptor\Decorator\Filter;


use Vain\Core\Runtime\RuntimeData;
use Vain\Expression\Descriptor\Decorator\AbstractDescriptorDecorator;
use Vain\Expression\Descriptor\DescriptorInterface;
use Vain\Expression\Evaluator\ExpressionEvaluatorInterface;
use Vain\Expression\ExpressionInterface;
use Vain\Expression\Serializer\ExpressionSerializerInterface;

class FilterDescriptorDecorator extends AbstractDescriptorDecorator
{

    private $evaluator;

    private $expression;

    /**
     * FilterDescriptorDecorator constructor.
     * @param DescriptorInterface $descriptor
     * @param ExpressionEvaluatorInterface $evaluator
     * @param ExpressionInterface $expression
     */
    public function __construct(DescriptorInterface $descriptor, ExpressionEvaluatorInterface $evaluator, ExpressionInterface $expression)
    {
        parent::__construct($descriptor);
    }

    /**
     * @inheritDoc
     */
    public function getValue(RuntimeData $runtimeData = null)
    {
        return parent::getValue($runtimeData); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritDoc
     */
    public function serialize(ExpressionSerializerInterface $serializer)
    {
        return parent::serialize($serializer); // TODO: Change the autogenerated stub
    }
}